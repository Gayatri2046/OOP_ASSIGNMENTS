#include <iostream>
#include <string>
using namespace std;
class employee {
private:
    string Employee_Name;
    int Employee_ID;
    string Department;
    string Date_of_joining;
    long long Contact;
    string Address;
    long long Telephone_Number;
    static int count;
public:
    inline void title() { // inline function
        cout << "\nWelcome to Employee Information System\n";
    }
    // Default Constructor
    employee() {
        count++;
        cout << "\nDefault Constructor called";
        Employee_Name = "Gayatri";
        Employee_ID = 2046;
        Department = "CEO";
        Date_of_joining = "20/04/2026";
        Contact = 1236547890;
        Address = "Pune";
        Telephone_Number = 123654;
    }
    // Parameterized Constructor
    employee(string n, int id, string dept, string date, long long contc, string addr, long long telep) {       cout << "\nParameterized Constructor Called";
        Employee_Name = n;
        Employee_ID = id;
        Department = dept;
        Date_of_joining = date;
        Contact = contc;
        Address = addr;
        Telephone_Number = telep;
        Count++;        }
    // Copy Constructor
    employee(const employee &obj) {
        cout << "\nCopy Constructor Called";
        Employee_Name = obj.Employee_Name;
        Employee_ID = obj.Employee_ID;
        Department = obj.Department;
        Date_of_joining = obj.Date_of_joining;
        Contact = obj.Contact;
        Address = obj.Address;
        Telephone_Number = obj.Telephone_Number;
        count++;
    }
    void display() {
        cout << "\nEmployee Details:";
        cout << "\nName: " << Employee_Name;
        cout << "\nID: " << Employee_ID;
        cout << "\nDepartment: " << Department;
        cout << "\nDate of Joining: " << Date_of_joining;
        cout << "\nContact No.: " << Contact;
        cout << "\nAddress: " << Address;
        cout << "\nTelephone No.: " << Telephone_Number;
    }
    // Destructor
    ~employee() {
        cout << "\nDestructor Called for Employee: " << Employee_Name;
        count--;
    }
    static void displaycount() {
        cout << "\nCurrent Employee Count: " << count << "\n";   } };
// Initialize static variable
int employee::count = 0;
int main() {
    // Default constructor
    employee obj1;
    obj1.title();
    obj1.display();
    // user input for parameterized constructor
    string n, dept, date, addr;
    int id;
    long long contc, telep;
    cout << "\nEnter Employee Name: ";
    cin >> n;
    cout << "Enter Employee ID: ";
    cin >> id;
    cout << "Enter Department: ";
    cin >> dept;
    cout << "Enter Date of Joining: ";
    cin >> date;
    cout << "Enter Contact Number: ";
    cin >> contc;
    cout << "Enter Address: ";
    cin >> addr;
    cout << "Enter Telephone Number: ";
    cin >> telep;

    // Parameterized constructor
    employee obj2(n, id, dept, date, contc, addr, telep);
    obj2.display();

    // Copy constructor
    employee obj3 = obj2;
    obj3.display();

    // Dynamic allocation
    employee *ptr = new employee(n, id, dept, date, contc, addr, telep);
    ptr->display();

    // Display  count
    employee::displaycount();


    // Delete object
    delete ptr;

    // Final count
    employee::displaycount();

    return 0; }
